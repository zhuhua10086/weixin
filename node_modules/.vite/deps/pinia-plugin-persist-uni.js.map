{
  "version": 3,
  "sources": ["../../pinia-plugin-persist-uni/dist/pinia-persist-uni.es.js"],
  "sourcesContent": ["const isH5 = typeof alert === \"function\";\nconst updateStorage = (strategy, store, options) => {\n  const storage = strategy.storage;\n  const storeKey = strategy.key || store.$id;\n  const isCustomStorage = isH5 || (options == null ? void 0 : options.enforceCustomStorage);\n  if (strategy.paths) {\n    const partialState = strategy.paths.reduce((finalObj, key) => {\n      finalObj[key] = store.$state[key];\n      return finalObj;\n    }, {});\n    if (isCustomStorage && storage) {\n      storage.setItem(storeKey, JSON.stringify(partialState));\n    } else {\n      uni.setStorage({ key: storeKey, data: JSON.stringify(partialState) });\n    }\n  } else if (isCustomStorage && storage) {\n    storage.setItem(storeKey, JSON.stringify(store.$state));\n  } else {\n    uni.setStorage({ key: storeKey, data: JSON.stringify(store.$state) });\n  }\n};\nvar index = ({ options, store }) => {\n  var _a, _b, _c, _d, _e, _f;\n  if ((_a = options.persist) == null ? void 0 : _a.enabled) {\n    const defaultStrat = [\n      {\n        key: store.$id,\n        storage: ((_b = options.persist) == null ? void 0 : _b.H5Storage) || (window == null ? void 0 : window.sessionStorage)\n      }\n    ];\n    const strategies = ((_d = (_c = options.persist) == null ? void 0 : _c.strategies) == null ? void 0 : _d.length) ? (_e = options.persist) == null ? void 0 : _e.strategies : defaultStrat;\n    strategies.forEach((strategy) => {\n      var _a2, _b2;\n      const storage = strategy.storage || ((_a2 = options.persist) == null ? void 0 : _a2.H5Storage) || (window == null ? void 0 : window.sessionStorage);\n      const storeKey = strategy.key || store.$id;\n      let storageResult;\n      if (isH5 || ((_b2 = options.persist) == null ? void 0 : _b2.enforceCustomStorage)) {\n        storageResult = storage.getItem(storeKey);\n      } else {\n        storageResult = uni.getStorageSync(storeKey);\n      }\n      if (storageResult) {\n        store.$patch(JSON.parse(storageResult));\n        updateStorage(strategy, store, options.persist);\n      }\n    });\n    store.$subscribe(() => {\n      strategies.forEach((strategy) => {\n        updateStorage(strategy, store, options.persist);\n      });\n    }, { detached: ((_f = options.persist) == null ? void 0 : _f.detached) ? true : false });\n  }\n};\nexport { index as default };\n"],
  "mappings": ";;;AAAA,IAAM,OAAO,OAAO,UAAU;AAC9B,IAAM,gBAAgB,CAAC,UAAU,OAAO,YAAY;AAClD,QAAM,UAAU,SAAS;AACzB,QAAM,WAAW,SAAS,OAAO,MAAM;AACvC,QAAM,kBAAkB,SAAS,WAAW,OAAO,SAAS,QAAQ;AACpE,MAAI,SAAS,OAAO;AAClB,UAAM,eAAe,SAAS,MAAM,OAAO,CAAC,UAAU,QAAQ;AAC5D,eAAS,GAAG,IAAI,MAAM,OAAO,GAAG;AAChC,aAAO;AAAA,IACT,GAAG,CAAC,CAAC;AACL,QAAI,mBAAmB,SAAS;AAC9B,cAAQ,QAAQ,UAAU,KAAK,UAAU,YAAY,CAAC;AAAA,IACxD,OAAO;AACL,UAAI,WAAW,EAAE,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,EAAE,CAAC;AAAA,IACtE;AAAA,EACF,WAAW,mBAAmB,SAAS;AACrC,YAAQ,QAAQ,UAAU,KAAK,UAAU,MAAM,MAAM,CAAC;AAAA,EACxD,OAAO;AACL,QAAI,WAAW,EAAE,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,MAAM,EAAE,CAAC;AAAA,EACtE;AACF;AACA,IAAI,QAAQ,CAAC,EAAE,SAAS,MAAM,MAAM;AAClC,MAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,OAAK,KAAK,QAAQ,YAAY,OAAO,SAAS,GAAG,SAAS;AACxD,UAAM,eAAe;AAAA,MACnB;AAAA,QACE,KAAK,MAAM;AAAA,QACX,WAAW,KAAK,QAAQ,YAAY,OAAO,SAAS,GAAG,eAAe,UAAU,OAAO,SAAS,OAAO;AAAA,MACzG;AAAA,IACF;AACA,UAAM,eAAe,MAAM,KAAK,QAAQ,YAAY,OAAO,SAAS,GAAG,eAAe,OAAO,SAAS,GAAG,WAAW,KAAK,QAAQ,YAAY,OAAO,SAAS,GAAG,aAAa;AAC7K,eAAW,QAAQ,CAAC,aAAa;AAC/B,UAAI,KAAK;AACT,YAAM,UAAU,SAAS,aAAa,MAAM,QAAQ,YAAY,OAAO,SAAS,IAAI,eAAe,UAAU,OAAO,SAAS,OAAO;AACpI,YAAM,WAAW,SAAS,OAAO,MAAM;AACvC,UAAI;AACJ,UAAI,UAAU,MAAM,QAAQ,YAAY,OAAO,SAAS,IAAI,uBAAuB;AACjF,wBAAgB,QAAQ,QAAQ,QAAQ;AAAA,MAC1C,OAAO;AACL,wBAAgB,IAAI,eAAe,QAAQ;AAAA,MAC7C;AACA,UAAI,eAAe;AACjB,cAAM,OAAO,KAAK,MAAM,aAAa,CAAC;AACtC,sBAAc,UAAU,OAAO,QAAQ,OAAO;AAAA,MAChD;AAAA,IACF,CAAC;AACD,UAAM,WAAW,MAAM;AACrB,iBAAW,QAAQ,CAAC,aAAa;AAC/B,sBAAc,UAAU,OAAO,QAAQ,OAAO;AAAA,MAChD,CAAC;AAAA,IACH,GAAG,EAAE,YAAY,KAAK,QAAQ,YAAY,OAAO,SAAS,GAAG,YAAY,OAAO,MAAM,CAAC;AAAA,EACzF;AACF;",
  "names": []
}
